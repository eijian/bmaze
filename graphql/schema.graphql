schema {
  query: Query
  mutation: Mutation
}

type Book {
  code: ID!
  title: String!
  author: String
  date: String
  lead: String
}

type Choice {
  sceneno: Int!
  text: String!
}

type Scene {
  code: ID!
  sceneno: Int!
  title: String
  body: String!
  bodyHtml: String!
  choices: [Choice!]
  image: Boolean!
}

type BooksResult {
  success: Boolean!
  errors: [String]!
  books: [Book]
}

type BookResult {
  success: Boolean!
  errors: [String]!
  book: Book
}

type SceneResult {
  success: Boolean!
  errors: [String]!
  scene: Scene
}

type ImageResult {
  success: Boolean!
  errors: [String]!
}

type Query {
  books(title: String): BooksResult!
  book(code: ID!): BookResult!
  scene(code: ID!, sceneno: Int!): SceneResult!
}

